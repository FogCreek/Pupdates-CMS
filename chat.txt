Basically parcel has already everything built-in







hi.

hey there


re: eslint config

so one cool thing about eslint config files is that they are directory scoped,

so i can have a different lint file in my /server/ versus /client/ code, for example

yeah I know... it should be possible to implement it... I just didn't code it, but adding that logic should be quite easy, the linter receives the config at each keystroke so we can assign the right config file very easily... add case!

will do.
so atm does the file have to be at root to be picked up?
yes, only at the root... and it has to be json (because I can't eval an arbitrary file on a client pc :P)

the fact that I JSON.parse it, I don't eval it
community's file is at /src/.eslintrc.js   (note .js, not json)

hahaha, hmm.   What stops them from writing scripts into your json file and destroying the world?

ok cool.

I can switch to .json for that purpose,  that'd be fine.

i just really like my comments and whatnot in the .js :p
yeah... if you have an idea for how to prevent malicious code execution, supporting .js would be way better (but... I don't know)


yeah, i don't have a way to avoid evaluating the .js,  so that tells me that _somebody_ has to eval it.  So if we can do that safely then we can jsonify it

I think that jsonify it on the server might be good... except not. on the server they can read .env and send it to anyone

i mean, that's true of all the server-side files tho, no?

you are right :P :P :P

I think it is possible to evaluate it sandboxed on the client  ...  just probably a huge pain.   like a script in an iframe or something. 
 
I think that it should be evaluated on the server... because it would be what eslint-cli would do

right

i mean, you could actually run eslint-cli on the server root and let it do its normal thing, and if you can somehow pipe the response out to the client, you have the true data

true. That's another reason to switch to VSCode/Monaco, because such plugins would be trivial to write. With CodeMirror... not that easy

something i'd love:
  -> get eslint errors on the client w/ the red dots
  -> if it's an error that eslint knows how to fix, put a little hammer icon by the dot.  IF you click on it, apply the fix.
  
it's kind of a safe hybrid of the autocorrect behavior w/ letting the user stay in control

another reason to switch to Monaco :P :P :P

Stackblitz and CodeSandbox were able to run the _entire_ VSCode on the browser, including all the plugins and helpers... so they can already do what you are describing.

wow.

yep. We really should give some more love to the editor.

yeah, feels like this could be a major new initiative to make glitch way sweeter.  intreons  hah cursor fight.


i gotta get lunch before it leaves :p   this is cool!   :thumbsup:  ttyl

alright :) thanks for looking at it! bye!








